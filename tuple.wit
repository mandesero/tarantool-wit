interface %tuple {

    use types.{
        box-error,
        box-tuple,
        tuple-field,
        tuple-format,
    };

    new: func(format: tuple-format, data: list<u8>) -> result<box-tuple, box-error>;
    ref: func(t: box-tuple) -> s32;
    unref: func(t: box-tuple);
    field-count: func(t: box-tuple) -> u32;
    bsize: func(t: box-tuple) -> u64;
    to-buf: func(t: box-tuple) -> list<u8>;
    format: func(t: box-tuple) -> tuple-format;
    field: func(t: box-tuple, idx: u32) -> result<tuple-field, box-error>;
    field-by-path: func(path: string, index-base: s32) -> result<tuple-field, box-error>;
    update: func(t: box-tuple, expr: list<u8>) -> result<box-tuple, box-error>;
    upsert: func(t: box-tuple, expr: list<u8>) -> result<box-tuple, box-error>;
    validate: func(t: box-tuple, format: tuple-format) -> bool;
}
