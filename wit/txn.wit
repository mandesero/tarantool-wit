@since(version = 0.1.0)
interface txn {

    @since(version = 0.1.0)
    use types.{box-error, txn-isolation-level};
  
    /// Returns the current transaction ID.
    ///
    /// A transaction ID is a non-persistent unique identifier of the current transaction.
    /// If no transaction is active, the return value is `-1`.
    ///
    /// ### Returns
    /// - A signed 64-bit integer representing the transaction ID, or `-1` if no transaction.
    @since(version = 0.1.0)
    txn-id: func() -> s64;
  
    /// Returns the isolation level of the current transaction.
    ///
    /// Returns `-1` if there is no active transaction.
    ///
    /// ### Returns
    /// - A `txn-isolation-level` enum value indicating the current isolation level.
    @since(version = 0.1.0)
    txn-isolation: func() -> txn-isolation-level;
  
    /// Checks whether a transaction is currently active.
    ///
    /// ### Returns
    /// - `true` if a transaction is active; `false` otherwise.
    @since(version = 0.1.0)
    txn: func() -> bool;
  
    /// Begins a new transaction.
    ///
    /// Must be called before any data manipulation (INSERT, UPDATE, etc.).
    /// Fails if a transaction is already active in the fiber.
    ///
    /// ### Raises
    /// - `box-error
    @since(version = 0.1.0)
    begin: func() -> result<_, box-error>;
  
    /// Commits the current transaction.
    ///
    /// Finalizes and applies all changes. If a disk error occurs, it returns an error.
    ///
    /// ### Raises
    /// - `box-error
    @since(version = 0.1.0)
    commit: func() -> result<_, box-error>;
  
    /// Rolls back the current transaction.
    ///
    /// Discards all changes made within the current transaction.
    /// 
    /// ### Raises
    /// - `box-error
    @since(version = 0.1.0)
    rollback: func() -> result<_, box-error>;
  
    /// Sets the isolation level for the current transaction.
    ///
    /// Must be called before the first DML operation in the transaction.
    ///
    /// ### Parameters
    /// - `isolation`: A `txn-isolation-level` enum value, such as `read-committed`.
    ///
    /// ### Raises
    /// - `box-error
    @since(version = 0.1.0)
    txn-set-isolation: func(isolation: txn-isolation-level) -> result<_, box-error>;
  
    /// Marks the current transaction as synchronous.
    ///
    /// All changes will be synchronized to disk before commit completes.
    @since(version = 0.1.0)
    txn-make-sync: func();
  }